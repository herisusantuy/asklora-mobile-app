// Mocks generated by Mockito 5.3.2 from annotations
// in asklora_mobile_app/test/forgot_password/forgot_password_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:asklora_mobile_app/core/domain/base_response.dart' as _i2;
import 'package:asklora_mobile_app/feature/auth/forgot_password/domain/forgot_password_api_client.dart'
    as _i7;
import 'package:asklora_mobile_app/feature/auth/forgot_password/domain/forgot_password_request.dart'
    as _i8;
import 'package:asklora_mobile_app/feature/auth/forgot_password/domain/forgot_password_response.dart'
    as _i6;
import 'package:asklora_mobile_app/feature/auth/forgot_password/repository/forgot_password_repository.dart'
    as _i4;
import 'package:dio/dio.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBaseResponse_0<T> extends _i1.SmartFake
    implements _i2.BaseResponse<T> {
  _FakeBaseResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_1<T> extends _i1.SmartFake implements _i3.Response<T> {
  _FakeResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ForgotPasswordRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockForgotPasswordRepository extends _i1.Mock
    implements _i4.ForgotPasswordRepository {
  MockForgotPasswordRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.BaseResponse<_i6.ForgotPasswordResponse>> forgotPassword(
          {required String? email}) =>
      (super.noSuchMethod(
        Invocation.method(
          #forgotPassword,
          [],
          {#email: email},
        ),
        returnValue:
            _i5.Future<_i2.BaseResponse<_i6.ForgotPasswordResponse>>.value(
                _FakeBaseResponse_0<_i6.ForgotPasswordResponse>(
          this,
          Invocation.method(
            #forgotPassword,
            [],
            {#email: email},
          ),
        )),
      ) as _i5.Future<_i2.BaseResponse<_i6.ForgotPasswordResponse>>);
}

/// A class which mocks [ForgotPasswordApiClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockForgotPasswordApiClient extends _i1.Mock
    implements _i7.ForgotPasswordApiClient {
  MockForgotPasswordApiClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.Response<dynamic>> forgotPassword(
          _i8.ForgotPasswordRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #forgotPassword,
          [request],
        ),
        returnValue:
            _i5.Future<_i3.Response<dynamic>>.value(_FakeResponse_1<dynamic>(
          this,
          Invocation.method(
            #forgotPassword,
            [request],
          ),
        )),
      ) as _i5.Future<_i3.Response<dynamic>>);
}
