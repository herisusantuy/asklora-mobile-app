// Mocks generated by Mockito 5.3.0 from annotations
// in asklora_mobile_app/test/reset_password/reset_password_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:asklora_mobile_app/core/domain/base_response.dart' as _i2;
import 'package:asklora_mobile_app/feature/auth/reset_password/domain/reset_password_api_client.dart'
    as _i7;
import 'package:asklora_mobile_app/feature/auth/reset_password/domain/reset_password_request.dart'
    as _i8;
import 'package:asklora_mobile_app/feature/auth/reset_password/domain/reset_password_response.dart'
    as _i6;
import 'package:asklora_mobile_app/feature/auth/reset_password/repository/reset_password_repository.dart'
    as _i4;
import 'package:dio/dio.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBaseResponse_0<T> extends _i1.SmartFake
    implements _i2.BaseResponse<T> {
  _FakeBaseResponse_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeResponse_1<T> extends _i1.SmartFake implements _i3.Response<T> {
  _FakeResponse_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [ResetPasswordRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockResetPasswordRepository extends _i1.Mock
    implements _i4.ResetPasswordRepository {
  MockResetPasswordRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.BaseResponse<_i6.ResetPasswordResponse>> resetPassword(
          {String? email}) =>
      (super.noSuchMethod(Invocation.method(#resetPassword, [], {#email: email}),
              returnValue:
                  _i5.Future<_i2.BaseResponse<_i6.ResetPasswordResponse>>.value(
                      _FakeBaseResponse_0<_i6.ResetPasswordResponse>(
                          this,
                          Invocation.method(
                              #resetPassword, [], {#email: email}))))
          as _i5.Future<_i2.BaseResponse<_i6.ResetPasswordResponse>>);
}

/// A class which mocks [ResetPasswordApiClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockResetPasswordApiClient extends _i1.Mock
    implements _i7.ResetPasswordApiClient {
  MockResetPasswordApiClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.Response<dynamic>> resetPassword(
          _i8.ResetPasswordRequest? request) =>
      (super.noSuchMethod(Invocation.method(#resetPassword, [request]),
              returnValue: _i5.Future<_i3.Response<dynamic>>.value(
                  _FakeResponse_1<dynamic>(
                      this, Invocation.method(#resetPassword, [request]))))
          as _i5.Future<_i3.Response<dynamic>>);
}
