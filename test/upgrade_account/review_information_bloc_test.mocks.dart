// Mocks generated by Mockito 5.3.0 from annotations
// in asklora_mobile_app/test/upgrade_account/review_information_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;

import 'package:asklora_mobile_app/core/utils/storage/secure_storage.dart'
    as _i10;
import 'package:asklora_mobile_app/feature/user/account/domain/get_account/get_account_response.dart'
    as _i2;
import 'package:asklora_mobile_app/feature/user/account/domain/upgrade_account/tax_info_request.dart'
    as _i6;
import 'package:asklora_mobile_app/feature/user/account/domain/upgrade_account/upgrade_account_request.dart'
    as _i3;
import 'package:asklora_mobile_app/feature/user/account/repository/account_repository.dart'
    as _i7;
import 'package:asklora_mobile_app/feature/user/kyc/domain/onfido_result_request.dart'
    as _i9;
import 'package:asklora_mobile_app/feature/user/kyc/domain/onfido_result_response.dart'
    as _i5;
import 'package:asklora_mobile_app/feature/user/kyc/domain/onfido_token_response.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetAccountResponse_0 extends _i1.SmartFake
    implements _i2.GetAccountResponse {
  _FakeGetAccountResponse_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeUpgradeAccountRequest_1 extends _i1.SmartFake
    implements _i3.UpgradeAccountRequest {
  _FakeUpgradeAccountRequest_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeOnfidoTokenResponse_2 extends _i1.SmartFake
    implements _i4.OnfidoTokenResponse {
  _FakeOnfidoTokenResponse_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeOnfidoResultResponse_3 extends _i1.SmartFake
    implements _i5.OnfidoResultResponse {
  _FakeOnfidoResultResponse_3(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeTaxInfoRequest_4 extends _i1.SmartFake
    implements _i6.TaxInfoRequest {
  _FakeTaxInfoRequest_4(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [AccountRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAccountRepository extends _i1.Mock implements _i7.AccountRepository {
  MockAccountRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.GetAccountResponse> getAccount() =>
      (super.noSuchMethod(Invocation.method(#getAccount, []),
              returnValue: _i8.Future<_i2.GetAccountResponse>.value(
                  _FakeGetAccountResponse_0(
                      this, Invocation.method(#getAccount, []))))
          as _i8.Future<_i2.GetAccountResponse>);
  @override
  _i8.Future<_i3.UpgradeAccountRequest> upgradeAccount(
          _i3.UpgradeAccountRequest? upgradeAccountRequest) =>
      (super.noSuchMethod(
              Invocation.method(#upgradeAccount, [upgradeAccountRequest]),
              returnValue: _i8.Future<_i3.UpgradeAccountRequest>.value(
                  _FakeUpgradeAccountRequest_1(
                      this,
                      Invocation.method(
                          #upgradeAccount, [upgradeAccountRequest]))))
          as _i8.Future<_i3.UpgradeAccountRequest>);
  @override
  _i8.Future<_i4.OnfidoTokenResponse> getOnfidoToken() => (super.noSuchMethod(
          Invocation.method(#getOnfidoToken, []),
          returnValue: _i8.Future<_i4.OnfidoTokenResponse>.value(
              _FakeOnfidoTokenResponse_2(
                  this, Invocation.method(#getOnfidoToken, []))))
      as _i8.Future<_i4.OnfidoTokenResponse>);
  @override
  _i8.Future<_i5.OnfidoResultResponse> updateKycResult(
          _i9.OnfidoResultRequest? request) =>
      (super.noSuchMethod(Invocation.method(#updateKycResult, [request]),
              returnValue: _i8.Future<_i5.OnfidoResultResponse>.value(
                  _FakeOnfidoResultResponse_3(
                      this, Invocation.method(#updateKycResult, [request]))))
          as _i8.Future<_i5.OnfidoResultResponse>);
  @override
  _i8.Future<_i6.TaxInfoRequest> submitTaxInfo(_i6.TaxInfoRequest? request) =>
      (super.noSuchMethod(Invocation.method(#submitTaxInfo, [request]),
              returnValue: _i8.Future<_i6.TaxInfoRequest>.value(
                  _FakeTaxInfoRequest_4(
                      this, Invocation.method(#submitTaxInfo, [request]))))
          as _i8.Future<_i6.TaxInfoRequest>);
}

/// A class which mocks [SecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecureStorage extends _i1.Mock implements _i10.SecureStorage {
  MockSecureStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<void> writeSecureData(String? key, String? value) =>
      (super.noSuchMethod(Invocation.method(#writeSecureData, [key, value]),
              returnValue: _i8.Future<void>.value(),
              returnValueForMissingStub: _i8.Future<void>.value())
          as _i8.Future<void>);
  @override
  _i8.Future<String?> readSecureData(String? key) =>
      (super.noSuchMethod(Invocation.method(#readSecureData, [key]),
          returnValue: _i8.Future<String?>.value()) as _i8.Future<String?>);
  @override
  _i8.Future<void> deleteSecureData(String? key) => (super.noSuchMethod(
      Invocation.method(#deleteSecureData, [key]),
      returnValue: _i8.Future<void>.value(),
      returnValueForMissingStub: _i8.Future<void>.value()) as _i8.Future<void>);
  @override
  _i8.Future<void> deleteAllSecureData() => (super.noSuchMethod(
      Invocation.method(#deleteAllSecureData, []),
      returnValue: _i8.Future<void>.value(),
      returnValueForMissingStub: _i8.Future<void>.value()) as _i8.Future<void>);
}
