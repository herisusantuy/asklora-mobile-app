// Mocks generated by Mockito 5.3.2 from annotations
// in asklora_mobile_app/test/portfolio/portfolio_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:asklora_mobile_app/core/domain/base_response.dart' as _i2;
import 'package:asklora_mobile_app/feature/bot_stock/presentation/portfolio/domain/portfolio_bot_detail_model.dart'
    as _i8;
import 'package:asklora_mobile_app/feature/bot_stock/presentation/portfolio/domain/portfolio_bot_model.dart'
    as _i5;
import 'package:asklora_mobile_app/feature/bot_stock/presentation/portfolio/domain/portfolio_response.dart'
    as _i7;
import 'package:asklora_mobile_app/feature/bot_stock/presentation/portfolio/repository/portfolio_repository.dart'
    as _i3;
import 'package:asklora_mobile_app/feature/bot_stock/utils/bot_stock_utils.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBaseResponse_0<T> extends _i1.SmartFake
    implements _i2.BaseResponse<T> {
  _FakeBaseResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PortfolioRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPortfolioRepository extends _i1.Mock
    implements _i3.PortfolioRepository {
  MockPortfolioRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.BaseResponse<List<_i5.PortfolioBotModel>>> fetchBotPortfolio(
          _i6.BotStockFilter? botStockFilter) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchBotPortfolio,
          [botStockFilter],
        ),
        returnValue:
            _i4.Future<_i2.BaseResponse<List<_i5.PortfolioBotModel>>>.value(
                _FakeBaseResponse_0<List<_i5.PortfolioBotModel>>(
          this,
          Invocation.method(
            #fetchBotPortfolio,
            [botStockFilter],
          ),
        )),
      ) as _i4.Future<_i2.BaseResponse<List<_i5.PortfolioBotModel>>>);
  @override
  _i4.Future<_i2.BaseResponse<_i7.PortfolioResponse>> fetchPortfolio() =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPortfolio,
          [],
        ),
        returnValue: _i4.Future<_i2.BaseResponse<_i7.PortfolioResponse>>.value(
            _FakeBaseResponse_0<_i7.PortfolioResponse>(
          this,
          Invocation.method(
            #fetchPortfolio,
            [],
          ),
        )),
      ) as _i4.Future<_i2.BaseResponse<_i7.PortfolioResponse>>);
  @override
  _i4.Future<_i2.BaseResponse<_i8.PortfolioBotDetailModel>>
      fetchBotPortfolioDetail(
    String? ticker,
    String? botId,
  ) =>
          (super.noSuchMethod(
            Invocation.method(
              #fetchBotPortfolioDetail,
              [
                ticker,
                botId,
              ],
            ),
            returnValue:
                _i4.Future<_i2.BaseResponse<_i8.PortfolioBotDetailModel>>.value(
                    _FakeBaseResponse_0<_i8.PortfolioBotDetailModel>(
              this,
              Invocation.method(
                #fetchBotPortfolioDetail,
                [
                  ticker,
                  botId,
                ],
              ),
            )),
          ) as _i4.Future<_i2.BaseResponse<_i8.PortfolioBotDetailModel>>);
  @override
  _i4.Future<_i2.BaseResponse<bool>> rolloverBotStock(
          _i5.PortfolioBotModel? portfolioBotModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #rolloverBotStock,
          [portfolioBotModel],
        ),
        returnValue:
            _i4.Future<_i2.BaseResponse<bool>>.value(_FakeBaseResponse_0<bool>(
          this,
          Invocation.method(
            #rolloverBotStock,
            [portfolioBotModel],
          ),
        )),
      ) as _i4.Future<_i2.BaseResponse<bool>>);
  @override
  _i4.Future<_i2.BaseResponse<bool>> endBotStock(
          _i5.PortfolioBotModel? portfolioBotModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #endBotStock,
          [portfolioBotModel],
        ),
        returnValue:
            _i4.Future<_i2.BaseResponse<bool>>.value(_FakeBaseResponse_0<bool>(
          this,
          Invocation.method(
            #endBotStock,
            [portfolioBotModel],
          ),
        )),
      ) as _i4.Future<_i2.BaseResponse<bool>>);
}
